import { type CSSUtility } from '@/css-utilities';
import { Base } from '@/css-utilities/base';
import { type UnsafeCSSValue } from '@/utils/css-value';
import { type Dimension } from '@/utils/dimension';
interface NormaliseFunctionValuesOptions {
    dimension?: Dimension;
    perspective?: UnsafeCSSValue;
}
interface PerspectiveDeclarations {
    perspective: string;
}
export declare class Perspective extends Base implements CSSUtility {
    static defaultTheme: {
        none: string;
        250: string;
        500: string;
        750: string;
        1000: string;
    };
    static defaultFunctionValues: Required<Omit<NormaliseFunctionValuesOptions, 'dimension'>>;
    static normaliseFunctionValues: ({ dimension, perspective, }?: NormaliseFunctionValuesOptions) => string;
    static declarations: (values?: NormaliseFunctionValuesOptions) => PerspectiveDeclarations;
    static legacyDeclarations: () => import("@/css-utilities").TransformDeclarations;
    utilities: () => void;
}
export {};
