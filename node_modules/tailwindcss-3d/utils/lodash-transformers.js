"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    axesModifier: function() {
        return axesModifier;
    },
    nameModifier: function() {
        return nameModifier;
    },
    signModifier: function() {
        return signModifier;
    },
    addDurationWithGravity: function() {
        return addDurationWithGravity;
    }
});
var _interop_require_default = require("@swc/helpers/_/_interop_require_default");
var _object_spread = require("@swc/helpers/_/_object_spread");
var _flatten = /*#__PURE__*/ _interop_require_default._(require("lodash/flatten"));
var _forEach = /*#__PURE__*/ _interop_require_default._(require("lodash/forEach"));
var _isPlainObject = /*#__PURE__*/ _interop_require_default._(require("lodash/isPlainObject"));
var _isString = /*#__PURE__*/ _interop_require_default._(require("lodash/isString"));
var _isUndefined = /*#__PURE__*/ _interop_require_default._(require("lodash/isUndefined"));
var axesModifier = function(axes, silentModifier) {
    var safeAxes = (0, _isUndefined.default)(axes) ? [
        "x",
        "y",
        "z"
    ] : (0, _flatten.default)([
        axes
    ]);
    var safeSilentModifier = (0, _isUndefined.default)(silentModifier) ? "1" : silentModifier;
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(result, value, modifier) {
        (0, _forEach.default)(safeAxes, function(axis) {
            var property = String(modifier) === String(safeSilentModifier) ? axis : "".concat(axis, "-").concat(modifier);
            result[property] = (0, _isPlainObject.default)(value) ? _object_spread._({
                axis: axis,
                originalModifier: modifier
            }, value) : {
                axis: axis,
                originalModifier: modifier,
                value: value
            };
        });
    };
};
var nameModifier = function(name, silentModifier) {
    var safeName = (0, _isString.default)(name) ? name : "";
    var safeSilentModifier = (0, _isString.default)(silentModifier) ? silentModifier : safeName === "" // If there is no name, don't silence the modifier
     ? "" : "1";
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(result, value, modifier) {
        var property = String(modifier) === safeSilentModifier ? safeName : safeName === "" ? modifier : "".concat(safeName, "-").concat(modifier);
        result[property] = (0, _isPlainObject.default)(value) ? _object_spread._({
            name: name,
            originalModifier: modifier
        }, value) : {
            name: name,
            originalModifier: modifier,
            value: value
        };
    };
};
var signModifier = function(signs) {
    var safeSigns = (0, _isUndefined.default)(signs) ? [
        "",
        "-"
    ] : (0, _flatten.default)([
        signs
    ]);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    return function(result, value, modifier) {
        (0, _forEach.default)(safeSigns, function(sign) {
            result["".concat(sign).concat(modifier)] = (0, _isPlainObject.default)(value) ? _object_spread._({
                sign: sign,
                originalModifier: modifier
            }, value) : {
                sign: sign,
                originalModifier: modifier,
                value: value
            };
        });
    };
};
var addDurationWithGravity = function() {
    return(// eslint-disable-next-line @typescript-eslint/no-explicit-any
    function(result, value, modifier) {
        var _value_originalModifier;
        var duration = Math.pow(Number((_value_originalModifier = value.originalModifier) !== null && _value_originalModifier !== void 0 ? _value_originalModifier : modifier), 0.25).toFixed(2);
        result[modifier] = (0, _isPlainObject.default)(value) ? _object_spread._({
            duration: duration,
            originalModifier: modifier
        }, value) : {
            duration: duration,
            originalModifier: modifier,
            value: value
        };
    });
};
